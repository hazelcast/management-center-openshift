name: Build and publish Management Center RHEL image

on:
  pull_request:
  push:
    tags:
      - "v4.*"
      - "v5.*"

jobs:
  build:
    defaults:
      run:
        shell: bash
    env:
      SCAN_REGISTRY: "scan.connect.redhat.com"
      TIMEOUT_IN_MINS: 120
#      HZ_MC_VERSION: 4.2020.12-2
#      HZ_ENTERPRISE_LICENSE: ${{ secrets.HZ_ENTERPRISE_LICENSE }}
#      OCP_LOGIN_USERNAME: ${{ secrets.OCP_LOGIN_USERNAME }}
#      OCP_LOGIN_PASSWORD: ${{ secrets.OCP_LOGIN_PASSWORD }}
#      OCP_CLUSTER_URL: ${{ secrets.OCP_CLUSTER_URL }}
      MC_RHEL_REPO_PASSWORD: ${{ secrets.MC_RHEL_REPO_PASSWORD }}
      MC_RHEL_REPOSITORY: ${{ secrets.MC_RHEL_REPOSITORY }}
      RHEL_API_KEY:  ${{ secrets.RHEL_API_KEY }}

    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set release version and RHEL image as environment variables
        run: |
          RELEASE_VERSION=${GITHUB_REF:11}
          echo "RHEL_IMAGE=${MC_RHEL_REPOSITORY}:${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          
      - name: Build the Management Center image
        run: |
          docker build \
                --build-arg MC_VERSION=${MC_VERSION} \
                --tag ${RHEL_IMAGE} .

      - name: Log in to RedHat Scan Registry and push the image
        run: |
          docker login ${SCAN_REGISTRY} -u unused -p ${MC_RHEL_REPO_PASSWORD}
          docker push ${RHEL_IMAGE}

      - name: Wait for scan to complete
        run: |
          PROJECT_ID=$( echo ${MC_RHEL_REPOSITORY} | grep -m 1 -Po "/\K.+(?=/)" )
          VERSION=${RELEASE_VERSION}
          source .github/scripts/publish-rhel.sh

          wait_for_container_scan "$PROJECT_ID" "$VERSION" "$RHEL_API_KEY" "$TIMEOUT_IN_MINS"
          
#      - name: Deploy Hazelcast Cluster
#        run: |
#          WORKDIR=$(pwd)/${NAME}
#          PROJECT=hz-ee-test-${{ github.run_id }}
#          .github/scripts/smoke-test.sh \
#                        "$WORKDIR" \
#                        "$PROJECT"  \
#                        "$OCP_LOGIN_USERNAME"  \
#                        "$OCP_LOGIN_PASSWORD" \
#                        "$OCP_CLUSTER_URL" \
#                        "$MC_RHEL_REPO_PASSWORD" \
#                        "$MC_RHEL_REPOSITORY" \
#                        "$RELEASE_VERSION" \
#                        "$CLUSTER_SIZE" \
#                        "$HZ_ENTERPRISE_LICENSE" \
#                        "$HZ_MC_VERSION"
#
#        env:
#          CLUSTER_SIZE: 3
#          NAME: hazelcast-enterprise
#
#      - name: Validate Cluster Size
#        run: |
#          PROJECT=hz-ee-test-${{ github.run_id }}
#          HZ_NAME=$PROJECT
#          NAME=hazelcast-enterprise
#
#          source .github/scripts/cluster-verification.sh
#
#          wait_for_last_member_initialization $CLUSTER_SIZE
#
#          verify_cluster_size $CLUSTER_SIZE
#
#          oc wait --for=condition=Ready --timeout=120s pod ${HZ_NAME}-${NAME}-mancenter-0
#
#          verify_management_center $CLUSTER_SIZE
#        env:
#          CLUSTER_SIZE: 3
#          NAME: hazelcast-enterprise
#
#
#      - name: Clean up After Test
#        if: always()
#        run: |
#          PROJECT=hz-ee-test-${{ github.run_id }}
#          .github/scripts/clean-up.sh $PROJECT


#      - name: Publish the Management Center image
#        run: |
#          PROJECT_ID=$( echo ${MC_RHEL_REPOSITORY} | grep -m 1 -Po "/\K.+(?=/)" )
#          VERSION=${RELEASE_VERSION}
#          source .github/scripts/publish-rhel.sh
#
#          publish_the_image "$PROJECT_ID" "$VERSION" "$RHEL_API_KEY"
#          wait_for_container_publish "$PROJECT_ID" "$VERSION" "$RHEL_API_KEY" "$TIMEOUT_IN_MINS"
