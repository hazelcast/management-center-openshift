name: Build and publish Management Center RHEL image

on:
  push:
    tags:
      - "v5.*"

jobs:
  build:
    defaults:
      run:
        shell: bash
    env:
      SCAN_REGISTRY: "quay.io"
      SCAN_REGISTRY_USER: ${{ secrets.SCAN_REGISTRY_USER }}
      SCAN_REGISTRY_PASSWORD: ${{ secrets.SCAN_REGISTRY_PASSWORD }}
      MC_RHEL_REPOSITORY: ${{ secrets.MC_RHEL_REPOSITORY }}
      TIMEOUT_IN_MINS: 120
      RHEL_API_KEY:  ${{ secrets.RHEL_API_KEY }}

    runs-on: ubuntu-20.04
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set release version and RHEL image as environment variables
        run: |
          RELEASE_VERSION=${GITHUB_REF:11}
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          SCAN_REPOSITORY=quay.io/redhat-isv-containers/${RHEL_PROJECT_ID}
          echo "SCAN_REPOSITORY=${SCAN_REPOSITORY}" >> $GITHUB_ENV
          echo "RHEL_IMAGE=${MC_RHEL_REPOSITORY}:${RELEASE_VERSION}" >> $GITHUB_ENV
          
      - name: Build the Management Center image
        run: |
          docker build \
                --build-arg MC_VERSION=${RELEASE_VERSION} \
                --tag ${RHEL_IMAGE} .

      - name: Log in to RedHat Scan Registry and push the image
        run: |
          docker login ${SCAN_REGISTRY} -u ${SCAN_REGISTRY_USER} -p ${SCAN_REGISTRY_PASSWORD}
          docker push ${RHEL_IMAGE}

      - name: Install preflight tool
        run: |
          PREFLIGHT_VERSION=$(curl -s https://api.github.com/repos/redhat-openshift-ecosystem/openshift-preflight/releases/latest | grep 'tag_name' | cut -d\" -f4)
          wget https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/download/${PREFLIGHT_VERSION}/preflight-linux-amd64
          chmod +x preflight-linux-amd64

      - name: Run preflight scan
        run: |
          ./preflight-linux-amd64 check container ${RHEL_IMAGE} \
          --submit --pyxis-api-token=${RHEL_API_KEY} \
          --certification-project-id=$RHEL_PROJECT_ID \
          --docker-config ~/.docker/config.json

      - name: Wait for scan to complete
        run: |
          VERSION=${RELEASE_VERSION}
          source .github/scripts/publish-rhel.sh

          wait_for_container_scan "$RHEL_PROJECT_ID" "$VERSION" "$RHEL_API_KEY" "$TIMEOUT_IN_MINS"

      - name: Publish the Management Center image
        run: |
          VERSION=${RELEASE_VERSION}
          source .github/scripts/publish-rhel.sh

          publish_the_image "$RHEL_PROJECT_ID" "$VERSION" "$RHEL_API_KEY"
          wait_for_container_publish "$RHEL_PROJECT_ID" "$VERSION" "$RHEL_API_KEY" "$TIMEOUT_IN_MINS"
